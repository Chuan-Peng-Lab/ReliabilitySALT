)
) - qnorm(
ifelse(fa / (fa + cr) > 0,
fa / (fa + cr),
1 / (2 * (fa + cr))
)
)) %>%
dplyr::ungroup() %>%
select(-"hit",-"fa",-"miss",-"cr") %>%
dplyr::group_by(Subject, Session)  %>%
tidyr::pivot_wider(names_from = Identity,
values_from = Dprime) %>%
dplyr::summarise(dprime_SPE = Self - (Stranger + Friend) / 2) %>%
dplyr::ungroup() %>%
dplyr::select(dprime_SPE)
r_value <- cor(SPE_half_1, SPE_half_2, method = "pearson")
df.SHR.Other[j+6,1] <- "Dprime"
df.SHR.Other[j+6,3] <- r_value
}
rm(j, r_value, SPE_half_1, SPE_half_2)
for(j in 1:length(list.SHR.Others)) {
SPE_half_1 <- list.SHR.Others[[j]][[1]] %>%
dplyr::group_by(Subject, Identity, Match, Session) %>%
dplyr::summarise(Eff = mean(RT_ms)/mean(ACC))%>%
dplyr::ungroup() %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = Eff) %>%
dplyr::summarise(eff_SPE = Self - (Stranger + Friend) / 2) %>%
dplyr::ungroup() %>%
dplyr::select(eff_SPE)
SPE_half_2 <- list.SHR.Others[[j]][[2]] %>%
dplyr::group_by(Subject, Identity, Match, Session) %>%
dplyr::summarise(Eff = mean(RT_ms)/mean(ACC))%>%
dplyr::ungroup() %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = Eff) %>%
dplyr::summarise(eff_SPE = Self - (Stranger + Friend) / 2) %>%
dplyr::ungroup() %>%
dplyr::select(eff_SPE)
r_value <- cor(SPE_half_1, SPE_half_2, method = "pearson")
df.SHR.Other[j+9,1] <- "Efficiency"
df.SHR.Other[j+9,3] <- r_value
}
rm(j, r_value, SPE_half_1, SPE_half_2)
for(j in 1:length(list.SHR.Others)) {
SPE_half_1 <- list.SHR.Others[[j]][[1]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::select(Subject, Session, Match, Identity, v) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = v) %>%
dplyr::summarise(v_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(v_SPE)
SPE_half_2 <- list.SHR.Others[[j]][[2]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::select(Subject, Session, Match, Identity, v) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = v) %>%
dplyr::summarise(v_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(v_SPE)
r_value <- cor(SPE_half_1, SPE_half_2, method = "pearson")
df.SHR.Other[j+12,1] <- "DDM: v"
df.SHR.Other[j+12,3] <- r_value
}
rm(j, r_value, SPE_half_1, SPE_half_2)
for(j in 1:length(list.SHR.Others)) {
SPE_half_1 <- list.SHR.Others[[j]][[1]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
SPE_half_2 <- list.SHR.Others[[j]][[2]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
r_value <- cor(SPE_half_1, SPE_half_2, method = "pearson")
df.SHR.Other[j+15,1] <- "DDM: z"
df.SHR.Other[j+15,3] <- r_value
}
rm(j, r_value, SPE_half_1, SPE_half_2)
r_values <- list()
for(j in 1:length(list.SHR.MC)) {
SPE_half_1 <- list.SHR.MC[[j]][[1]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::select(Subject, Session, Match, Identity, v) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = v) %>%
dplyr::summarise(v_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(v_SPE)
SPE_half_2 <- list.SHR.MC[[j]][[2]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::select(Subject, Session, Match, Identity, v) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = v) %>%
dplyr::summarise(v_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(v_SPE)
r_values[[j]] <- cor(SPE_half_1, SPE_half_2, method = "pearson")
}
# Calculate the mean of the Pearson correlation coefficients
r_values_vector <- unlist(r_values)
r <- mean(r_values_vector)
CI <- quantile(r_values_vector, c(0.025, 0.975))
print(paste("Permutated Split-half reliability:", round(r, 7)))
print(paste("95% CI:", paste(round(CI, 7), collapse=", ")))
plot.SHR.MC[5,1] <- "DDM: v"
plot.SHR.MC[5,2] <- r
plot.SHR.MC[5,3] <- CI[1]
plot.SHR.MC[5,4] <- CI[2]
rm(CI, r, j, r_values_vector, r_values, SPE_half_1, SPE_half_2)
View(plot.SHR.MC)
r_values <- list()
for(j in 1:length(list.SHR.MC)) {
SPE_half_1 <- list.SHR.MC[[j]][[1]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
SPE_half_2 <- list.SHR.MC[[j]][[2]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
r_values[[j]] <- cor(SPE_half_1, SPE_half_2, method = "pearson")
}
# Calculate the mean of the Pearson correlation coefficients
r_values_vector <- unlist(r_values)
r <- mean(r_values_vector)
CI <- quantile(r_values_vector, c(0.025, 0.975))
print(paste("Permutated Split-half reliability:", round(r, 7)))
print(paste("95% CI:", paste(round(CI, 7), collapse=", ")))
plot.SHR.MC[6,1] <- "z"
plot.SHR.MC[6,2] <- r
plot.SHR.MC[6,3] <- CI[1]
plot.SHR.MC[6,4] <- CI[2]
rm(CI, r, j, r_values_vector, r_values, SPE_half_1, SPE_half_2)
plot.SHR.MC <- plot.SHR.MC
View(plot.SHR.MC)
r_values <- list()
for(j in 1:length(list.SHR.MC)) {
SPE_half_1 <- list.SHR.MC[[j]][[1]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
SPE_half_2 <- list.SHR.MC[[j]][[2]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
r_values[[j]] <- cor(SPE_half_1, SPE_half_2, method = "pearson")
}
# Calculate the mean of the Pearson correlation coefficients
r_values_vector <- unlist(r_values)
r <- mean(r_values_vector)
CI <- quantile(r_values_vector, c(0.025, 0.975))
print(paste("Permutated Split-half reliability:", round(r, 7)))
print(paste("95% CI:", paste(round(CI, 7), collapse=", ")))
plot.SHR.MC[6,1] <- "DDM: z"
plot.SHR.MC[6,2] <- r
plot.SHR.MC[6,3] <- CI[1]
plot.SHR.MC[6,4] <- CI[2]
rm(CI, r, j, r_values_vector, r_values, SPE_half_1, SPE_half_2)
plot.SHR.MC <- plot.SHR.MC
View(plot.SHR.MC)
plot.SHR.MC$SPE_type<- factor(plot.SHR.MC$SPE_type, levels = c("RT", "ACC", "Dprime", "Eff", "v", "z"))
ggplot(plot.SHR.MC, aes(x = SPE_type, y = SH_r, color = SPE_type), width = 6, height = 6) +
geom_errorbar(aes(ymin = LLCI, ymax = ULCI), width = 0.1) +
geom_line() +
coord_flip() + #flips the x and y axes of a plot
labs(y = "Monte Carlo-based Split-Half Reliability", x = "SPE_Type") +
scale_x_discrete() +
scale_y_continuous(limits = c(-0.4, 1),
sec.axis = sec_axis(~., breaks = c(0, 0.5, 0.7, 1),
labels = c("unacceptable", "poor",
"acceptable", "excellent")),
breaks = seq(-0.4,1,by = 0.1)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") + #add dotted line
geom_hline(yintercept = 0.5, linetype = "dotted", color = "black") +
geom_hline(yintercept = 0.7, linetype = "dotted", color = "black") +
geom_hline(yintercept = 1, linetype = "dotted", color = "black") +
geom_point() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 25),
axis.title = element_text(size = 30),
plot.title = element_text(size = 24),
legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
legend.position = "top",
panel.grid = element_blank(),#hide the line in background
strip.background = element_rect(color="black", fill="white",
size=1))  +
guides(fill = guide_none(), color = guide_none()) #hide legend
ggsave(filename="Figure2_SPE_SHR.png", width = 9, height = 10)
plot.SHR.MC$SPE_type<- factor(plot.SHR.MC$SPE_type, levels = c("RT", "ACC", "Dprime", "Eff", "DDM: v", "DDM: z"))
ggplot(plot.SHR.MC, aes(x = SPE_type, y = SH_r, color = SPE_type), width = 6, height = 6) +
geom_errorbar(aes(ymin = LLCI, ymax = ULCI), width = 0.1) +
geom_line() +
coord_flip() + #flips the x and y axes of a plot
labs(y = "Monte Carlo-based Split-Half Reliability", x = "SPE_Type") +
scale_x_discrete() +
scale_y_continuous(limits = c(-0.4, 1),
sec.axis = sec_axis(~., breaks = c(0, 0.5, 0.7, 1),
labels = c("unacceptable", "poor",
"acceptable", "excellent")),
breaks = seq(-0.4,1,by = 0.1)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") + #add dotted line
geom_hline(yintercept = 0.5, linetype = "dotted", color = "black") +
geom_hline(yintercept = 0.7, linetype = "dotted", color = "black") +
geom_hline(yintercept = 1, linetype = "dotted", color = "black") +
geom_point() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 25),
axis.title = element_text(size = 30),
plot.title = element_text(size = 24),
legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
legend.position = "top",
panel.grid = element_blank(),#hide the line in background
strip.background = element_rect(color="black", fill="white",
size=1))  +
guides(fill = guide_none(), color = guide_none()) #hide legend
ggsave(filename="Figure2_SPE_SHR.png", width = 9, height = 10)
r_values <- list()
for(j in 1:length(list.SHR.MC)) {
SPE_half_1 <- list.SHR.MC[[j]][[1]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::select(Subject, Session, Match, Identity, v) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = v) %>%
dplyr::summarise(v_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(v_SPE)
SPE_half_2 <- list.SHR.MC[[j]][[2]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::select(Subject, Session, Match, Identity, v) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = v) %>%
dplyr::summarise(v_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(v_SPE)
r_values[[j]] <- cor(SPE_half_1, SPE_half_2, method = "pearson")
}
# Calculate the mean of the Pearson correlation coefficients
r_values_vector <- unlist(r_values)
r <- mean(r_values_vector)
CI <- quantile(r_values_vector, c(0.025, 0.975))
print(paste("Permutated Split-half reliability:", round(r, 7)))
print(paste("95% CI:", paste(round(CI, 7), collapse=", ")))
plot.SHR.MC[5,1] <- "DDM: v"
plot.SHR.MC[5,2] <- r
plot.SHR.MC[5,3] <- CI[1]
plot.SHR.MC[5,4] <- CI[2]
rm(CI, r, j, r_values_vector, r_values, SPE_half_1, SPE_half_2)
r_values <- list()
for(j in 1:length(list.SHR.MC)) {
SPE_half_1 <- list.SHR.MC[[j]][[1]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
SPE_half_2 <- list.SHR.MC[[j]][[2]] %>%
hausekeep::fit_ezddm(data = ., rts = "RT_sec", responses = "ACC", id = "Subject", group = c("Session", "Match", "Identity")) %>%
dplyr::mutate(., z = a/v) %>%
dplyr::select(Subject, Session, Match, Identity, z) %>%
dplyr::filter(Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = z) %>%
dplyr::summarise(z_SPE = Self - (Stranger + Friend) / 2) %>%
ungroup() %>%
dplyr::select(z_SPE)
r_values[[j]] <- cor(SPE_half_1, SPE_half_2, method = "pearson")
}
# Calculate the mean of the Pearson correlation coefficients
r_values_vector <- unlist(r_values)
r <- mean(r_values_vector)
CI <- quantile(r_values_vector, c(0.025, 0.975))
print(paste("Permutated Split-half reliability:", round(r, 7)))
print(paste("95% CI:", paste(round(CI, 7), collapse=", ")))
plot.SHR.MC[6,1] <- "DDM: z"
plot.SHR.MC[6,2] <- r
plot.SHR.MC[6,3] <- CI[1]
plot.SHR.MC[6,4] <- CI[2]
rm(CI, r, j, r_values_vector, r_values, SPE_half_1, SPE_half_2)
plot.SHR.MC <- plot.SHR.MC
plot.SHR.MC <- plot.SHR.MC
View(plot.SHR.MC)
plot.SHR.MC$SPE_type<- factor(plot.SHR.MC$SPE_type, levels = c("RT", "ACC", "Dprime", "Eff", "DDM: v", "DDM: z"))
ggplot(plot.SHR.MC, aes(x = SPE_type, y = SH_r, color = SPE_type), width = 6, height = 6) +
geom_errorbar(aes(ymin = LLCI, ymax = ULCI), width = 0.1) +
geom_line() +
coord_flip() + #flips the x and y axes of a plot
labs(y = "Monte Carlo-based Split-Half Reliability", x = "SPE_Type") +
scale_x_discrete() +
scale_y_continuous(limits = c(-0.4, 1),
sec.axis = sec_axis(~., breaks = c(0, 0.5, 0.7, 1),
labels = c("unacceptable", "poor",
"acceptable", "excellent")),
breaks = seq(-0.4,1,by = 0.1)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "black") + #add dotted line
geom_hline(yintercept = 0.5, linetype = "dotted", color = "black") +
geom_hline(yintercept = 0.7, linetype = "dotted", color = "black") +
geom_hline(yintercept = 1, linetype = "dotted", color = "black") +
geom_point() +
theme_bw() +
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 25),
axis.title = element_text(size = 30),
plot.title = element_text(size = 24),
legend.key.size = unit(2, "cm"),
legend.text = element_text(size = 20),
legend.title = element_blank(),
legend.position = "top",
panel.grid = element_blank(),#hide the line in background
strip.background = element_rect(color="black", fill="white",
size=1))  +
guides(fill = guide_none(), color = guide_none()) #hide legend
ggsave(filename="Figure2_SPE_SHR.png", width = 9, height = 10)
options(scipen=999)
Result_HLM <- lmer(RT_ms ~ Session*Match*Identity+(1|Subject), data = df.clean)
summary(Result_HLM)
anova(Result_HLM)
options(scipen=999)
HLM.result <- lmer(RT_ms ~ Session*Match*Identity+(1|Subject), data = df.clean)
summary(HLM.result)
anova(HLM.result)
rm(Result_HLM)
write.csv(df.SHR.Other, "Supplementary_Table_1.csv", row.names = FALSE)
View(list.ICC)
# 对每个子list进行操作，计算平均值和标准差
df.list <- lapply(list.ICC, function(x) {
x %>%
summarize_all(list(mean = mean, sd = sd))
})
#import used package
library(tidyverse)
library(Rmisc)
library(psych)
library(here)
library(lme4)
library(lmerTest)
library(data.table)
library(hausekeep)
# 对每个子list进行操作，计算平均值和标准差
df.list <- lapply(list.ICC, function(x) {
x %>%
summarize_all(list(mean = mean, sd = sd))
})
# 将结果绑定到一个新的数据框df.dsc中
df.dsc <- do.call(rbind, df.list)
rm(df.list)
View(df.dsc)
options(999)
options(scipen = 999)
# 对每个子list进行操作，计算平均值和标准差
df.list <- lapply(list.ICC, function(x) {
x %>%
summarize_all(list(mean = mean, sd = sd))
})
# 将结果绑定到一个新的数据框df.dsc中
df.dsc <- do.call(rbind, df.list)
rm(df.list)
options(scipen = 999)
# 对每个子list进行操作，计算平均值和标准差
df.list <- lapply(list.ICC, function(x) {
x %>%
summarize_all(list(mean = mean, sd = sd))
})
# 将结果绑定到一个新的数据框df.dsc中
df.dsc <- do.call(rbind, df.list) %>%
dplyr::select(.,"1_mean","1_sd","2_mean","2_sd","3_mean","3_sd",
"4_mean","4_sd","5_mean","5_sd","6_mean","6_sd")
rm(df.list)
options(scipen = 999)
# 对每个子list进行操作，计算平均值和标准差
df.list <- lapply(list.ICC, function(x) {
x %>%
summarize_all(list(mean = mean, sd = sd))
})
# 将结果绑定到一个新的数据框df.dsc中
df.dsc <- do.call(rbind, df.list)
rm(df.list)
options(scipen = 999)
# 对每个子list进行操作，计算平均值和标准差
df.list <- lapply(list.ICC, function(x) {
x %>%
summarize_all(list(mean = mean, sd = sd))
})
# 将结果绑定到一个新的数据框df.dsc中
df.dsc <- do.call(rbind, df.list) %>%
dplyr::select(.,"1_mean","1_sd","2_mean","2_sd","3_mean","3_sd",
"4_mean","4_sd","5_mean","5_sd","6_mean","6_sd")
rm(df.list)
options(scipen = 999)
# 对每个子list进行操作，计算平均值和标准差
df.list <- lapply(list.ICC, function(x) {
x %>%
summarize_all(list(mean = mean, sd = sd))
})
# 将结果绑定到一个新的数据框df.dsc中
df.dsc <- do.call(rbind, df.list) %>%
dplyr::select(.,"1_mean","1_sd","2_mean","2_sd","3_mean","3_sd",
"4_mean","4_sd","5_mean","5_sd","6_mean","6_sd")
write.csv(df.dsc, "Table_1.csv", row.names = TRUE)
rm(df.list)
View(df.ICC.RT)
View(list.SHR.MC)
View(list.SHR.MC)
View(df.clean)
df.HLM.SPE <- df.clean %>%
dplyr::filter(.,Match == "Match", ACC == "1") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = RT_ms) %>%
dplyr::summarise(rt_1_SPE = Self - (Stranger + Friend) / 2) %>% # mean rt of self-match - mean rt of other-match
dplyr::ungroup() %>%
dplyr::select(Subject,Session,rt_1_SPE)
#import used package
library(tidyverse)
library(Rmisc)
library(psych)
library(here)
library(lme4)
library(lmerTest)
library(data.table)
library(hausekeep)
df.HLM.SPE <- df.clean %>%
dplyr::filter(.,Match == "Match", ACC == "1") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = RT_ms) %>%
dplyr::summarise(rt_1_SPE = Self - (Stranger + Friend) / 2) %>% # mean rt of self-match - mean rt of other-match
dplyr::ungroup() %>%
dplyr::select(Subject,Session,rt_1_SPE)
df.HLM.SPE <- df.clean %>%
dplyr::filter(.,Match == "Match") %>%
dplyr::group_by(Subject, Session) %>%
tidyr::pivot_wider(names_from = Identity,
values_from = RT_ms)
View(df.HLM.SPE)
options(scipen=999)
HLM.result <- lmer(RT_ms ~ Session*Match*Identity+(1|Subject), data = df.clean)
summary(HLM.result)
anova(HLM.result)
rm(df.HLM.SPE)
